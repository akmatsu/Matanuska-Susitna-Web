// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
  provider      = "prisma-client-js"
}

model User {
  id                   String      @id @default(cuid())
  authId               String      @unique @default("")
  name                 String      @default("")
  email                String      @unique @default("")
  password             String?
  contact              Contact?    @relation("Contact_user")
  role                 Int?        @default(4)
  groups               UserGroup[] @relation("User_groups")
  createdAt            DateTime?   @default(now())
  updatedAt            DateTime?   @default(now()) @updatedAt
  from_UserGroup_owner UserGroup[] @relation("UserGroup_owner")
  from_Service_owner   Service[]   @relation("Service_owner")
}

model UserGroup {
  id                  String               @id @default(cuid())
  name                String               @default("")
  owner               User?                @relation("UserGroup_owner", fields: [ownerId], references: [id])
  ownerId             String?              @map("owner")
  description         String               @default("")
  users               User[]               @relation("User_groups")
  services            Service[]            @relation("Service_userGroups")
  documentCollections DocumentCollection[] @relation("DocumentCollection_userGroups")

  @@index([ownerId])
}

model Contact {
  id              String    @id @default(cuid())
  name            String    @default("")
  phone           String?
  email           String?
  primaryServices Service[] @relation("Service_primaryContact")
  services        Service[] @relation("Contact_services")
  user            User?     @relation("Contact_user", fields: [userId], references: [id])
  userId          String?   @unique @map("user")
  editorNotes     String    @default("")
}

model Alert {
  id          String    @id @default(cuid())
  title       String    @default("")
  body        String?
  urgency     Int
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @default(now()) @updatedAt
  editorNotes String    @default("")
}

model Tag {
  id                  String               @id @default(cuid())
  name                String               @default("")
  services            Service[]            @relation("Service_tags")
  documents           Document[]           @relation("Document_tags")
  documentCollections DocumentCollection[] @relation("DocumentCollection_tags")
}

model Service {
  id               String      @id @default(cuid())
  title            String      @default("")
  description      String      @default("")
  publishAt        DateTime?
  unpublishAt      DateTime?
  reviewDate       DateTime?
  slug             String      @unique @default("")
  owner            User?       @relation("Service_owner", fields: [ownerId], references: [id])
  ownerId          String?     @map("owner")
  body             String?
  actionLabel      String?
  actionUrl        String?
  tags             Tag[]       @relation("Service_tags")
  userGroups       UserGroup[] @relation("Service_userGroups")
  primaryContact   Contact?    @relation("Service_primaryContact", fields: [primaryContactId], references: [id])
  primaryContactId String?     @map("primaryContact")
  contacts         Contact[]   @relation("Contact_services")
  createdAt        DateTime?   @default(now())
  updatedAt        DateTime?   @default(now()) @updatedAt
  editorNotes      String      @default("")

  @@index([title])
  @@index([description])
  @@index([ownerId])
  @@index([primaryContactId])
}

model Highlight {
  id           String    @id @default(cuid())
  title        String    @default("")
  publishAt    DateTime?
  unpublishAt  DateTime?
  reviewDate   DateTime?
  image        String    @default("")
  message      String    @default("")
  internalLink String?
  externalLink String?
  editorNotes  String    @default("")
}

model Document {
  id            String               @id @default(cuid())
  title         String               @default("")
  description   String               @default("")
  tags          Tag[]                @relation("Document_tags")
  file_filesize Int?
  file_filename String?
  collections   DocumentCollection[] @relation("Document_collections")
  editorNotes   String               @default("")

  @@index([title])
}

model DocumentCollection {
  id          String      @id @default(cuid())
  title       String      @default("")
  documents   Document[]  @relation("Document_collections")
  tags        Tag[]       @relation("DocumentCollection_tags")
  userGroups  UserGroup[] @relation("DocumentCollection_userGroups")
  editorNotes String      @default("")
}
