/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 * Learn more about it here: https://the-guild.dev/graphql/codegen/plugins/presets/preset-client#reducing-bundle-size
 */
type Documents = {
    "\n  query GetAlerts {\n    alerts {\n      id\n      title\n      urgency\n      body\n    }\n  }\n": typeof types.GetAlertsDocument,
    "\n  query GetAssemblyDistrictMeta($where: AssemblyDistrictWhereUniqueInput!) {\n    assemblyDistrict(where: $where) {\n      title\n      description\n    }\n  }\n": typeof types.GetAssemblyDistrictMetaDocument,
    "\n  query GetAssemblyDistrict(\n    $where: AssemblyDistrictWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]\n  ) {\n    assemblyDistrict(where: $where) {\n      id\n      heroImage\n      title\n      description\n      slug\n      body\n      contacts {\n        id\n        name\n        title\n        phone\n        email\n      }\n      photo {\n        id\n        title\n        description\n        file {\n          id\n          width\n          height\n          url\n        }\n      }\n      memberName\n      bio\n      address\n      email\n      phone\n      fax\n      termStart\n      termEnd\n    }\n\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n": typeof types.GetAssemblyDistrictDocument,
    "\n  query GetBoardMeta($where: BoardWhereUniqueInput!) {\n    board(where: $where) {\n      title\n      description\n    }\n  }\n": typeof types.GetBoardMetaDocument,
    "\n  query GetBoard($where: BoardWhereUniqueInput!) {\n    board(where: $where) {\n      id\n      title\n      slug\n      description\n      body\n      heroImage\n      meetingSchedule\n      isActive\n      communities {\n        id\n        title\n        slug\n        description\n      }\n      districts {\n        id\n        title\n        slug\n        description\n        memberName\n        bio\n        address\n        email\n        phone\n        photo {\n          id\n          title\n          file {\n            width\n            height\n            url\n          }\n        }\n      }\n      linkToAgendas {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n      linkToResolutions {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n      linkToPublicOpinionMessage {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n\n      contacts {\n        id\n        name\n        title\n        phone\n        email\n      }\n      actions {\n        id\n        label\n        item {\n          __typename\n          ... on Service {\n            id\n            title\n            slug\n            description\n          }\n          ... on Park {\n            id\n            title\n            slug\n            description\n          }\n          ... on Trail {\n            id\n            title\n            slug\n            description\n          }\n          ... on Facility {\n            id\n            title\n            slug\n            description\n          }\n          ... on Community {\n            id\n            title\n            slug\n            description\n          }\n          ... on AssemblyDistrict {\n            id\n            title\n            slug\n            description\n          }\n          ... on OrgUnit {\n            id\n            title\n            slug\n            description\n          }\n          ... on Url {\n            id\n            title\n            description\n            url\n          }\n        }\n      }\n      documents {\n        id\n        title\n        file {\n          url\n          filename\n          filesize\n        }\n      }\n    }\n  }\n": typeof types.GetBoardDocument,
    "\n  query GetBoards($take: Int, $skip: Int, $where: BoardWhereInput) {\n    boards(take: $take, where: $where, skip: $skip) {\n      id\n      title\n      slug\n      description\n      isActive\n      type\n      meetingSchedule\n    }\n  }\n": typeof types.GetBoardsDocument,
    "\n  query GetBoardsPageMeta {\n    boardPage {\n      title\n      description\n    }\n  }\n": typeof types.GetBoardsPageMetaDocument,
    "\n  query GetBoardsPage {\n    boardPage {\n      id\n      title\n      description\n      body\n      heroImage\n      vacancyReport {\n        id\n        title\n        file {\n          url\n          filename\n          filesize\n        }\n      }\n      documents {\n        id\n        title\n        file {\n          url\n          filename\n          filesize\n        }\n      }\n      applicationForm {\n        id\n        title\n        file {\n          url\n          filename\n          filesize\n        }\n      }\n\n      contacts {\n        id\n        name\n        title\n        phone\n        email\n      }\n\n      actions {\n        id\n        label\n        item {\n          __typename\n          ... on Service {\n            id\n            title\n            slug\n            description\n          }\n          ... on Park {\n            id\n            title\n            slug\n            description\n          }\n          ... on Trail {\n            id\n            title\n            slug\n            description\n          }\n          ... on Facility {\n            id\n            title\n            slug\n            description\n          }\n          ... on Community {\n            id\n            title\n            slug\n            description\n          }\n          ... on AssemblyDistrict {\n            id\n            title\n            slug\n            description\n          }\n          ... on OrgUnit {\n            id\n            title\n            slug\n            description\n          }\n          ... on Url {\n            id\n            title\n            description\n            url\n          }\n        }\n      }\n    }\n  }\n": typeof types.GetBoardsPageDocument,
    "\n  query GetCommunityMeta($where: CommunityWhereUniqueInput!) {\n    community(where: $where) {\n      title\n      description\n    }\n  }\n": typeof types.GetCommunityMetaDocument,
    "\n  query GetCommunity(\n    $where: CommunityWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    community(where: $where) {\n      id\n      title\n      description\n      body\n      heroImage\n      services {\n        id\n        slug\n        title\n        description\n      }\n      contacts {\n        id\n        name\n        phone\n        email\n      }\n      districts {\n        slug\n        title\n        description\n        memberName\n        photo {\n          file {\n            url\n          }\n        }\n      }\n    }\n\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n": typeof types.GetCommunityDocument,
    "\n  query GetDocumentCollection($where: DocumentCollectionWhereUniqueInput!) {\n    documentCollection(where: $where) {\n      id\n      title\n      documents {\n        id\n        title\n        file {\n          filename\n          filesize\n          url\n        }\n      }\n    }\n  }\n": typeof types.GetDocumentCollectionDocument,
    "\n  query GetFacilityMeta($where: FacilityWhereUniqueInput!) {\n    facility(where: $where) {\n      title\n      description\n    }\n  }\n": typeof types.GetFacilityMetaDocument,
    "\n  query GetFacility(\n    $where: FacilityWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    facility(where: $where) {\n      id\n      slug\n      title\n      liveUrl\n      heroImage\n      park {\n        id\n        title\n        description\n        slug\n      }\n      services {\n        id\n        title\n        description\n        slug\n      }\n      description\n      body\n      address {\n        title\n        lineOne\n        lineTwo\n        city\n        state\n        zip\n      }\n      contacts {\n        id\n        name\n        email\n        phone\n        title\n      }\n      hours {\n        day\n        open\n        close\n      }\n    }\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n": typeof types.GetFacilityDocument,
    "\n  query GetHomePageMeta {\n    homePage {\n      title\n      description\n    }\n  }\n": typeof types.GetHomePageMetaDocument,
    "\n  query GetHomePage($take: Int, $orderBy: [PublicNoticeOrderByInput!]!) {\n    homePage {\n      id\n      title\n      description\n      heroImage\n      toolbeltOne {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      toolbeltTwo {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      toolbeltThree {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n          selectItem\n        }\n      }\n      toolbeltFour {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      highlightOne {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      highlightTwo {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      highlightThree {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n    }\n\n    publicNotices(take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n": typeof types.GetHomePageDocument,
    "\n  query GetOrgUnitMeta($where: OrgUnitWhereUniqueInput!) {\n    orgUnit(where: $where) {\n      id\n      title\n      description\n    }\n  }\n": typeof types.GetOrgUnitMetaDocument,
    "\n  query GetOrgUnit(\n    $where: OrgUnitWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    orgUnit(where: $where) {\n      id\n      title\n      description\n      body\n      heroImage\n      children {\n        id\n        description\n        title\n        slug\n      }\n      contacts {\n        id\n        name\n        title\n        email\n        phone\n      }\n      parent {\n        id\n        slug\n        title\n        description\n      }\n      services {\n        id\n        slug\n        title\n        description\n      }\n    }\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n": typeof types.GetOrgUnitDocument,
    "\n  query GetParkMeta($where: ParkWhereUniqueInput!) {\n    park(where: $where) {\n      title\n      description\n    }\n  }\n": typeof types.GetParkMetaDocument,
    "\n  query GetPark(\n    $where: ParkWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    park(where: $where) {\n      id\n      title\n      slug\n      body\n      heroImage\n      contacts {\n        id\n        title\n        phone\n        email\n        name\n      }\n      services {\n        title\n        description\n        slug\n        id\n      }\n      address {\n        title\n        lineOne\n        lineOne\n        city\n        state\n        zip\n      }\n      hours {\n        day\n        open\n        close\n      }\n      trails {\n        title\n        description\n        slug\n        id\n      }\n      facilities {\n        title\n        id\n        description\n        slug\n      }\n    }\n\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n": typeof types.GetParkDocument,
    "\n  query GetPublicNoticeMeta($where: PublicNoticeWhereUniqueInput!) {\n    publicNotice(where: $where) {\n      title\n      description\n    }\n  }\n": typeof types.GetPublicNoticeMetaDocument,
    "\n  query GetPublicNotice($where: PublicNoticeWhereUniqueInput!) {\n    publicNotice(where: $where) {\n      id\n      slug\n      title\n      heroImage\n      body\n      description\n      effectiveDate\n      endDate\n      contacts {\n        id\n        name\n        title\n        email\n        phone\n      }\n      documents {\n        id\n        title\n        file {\n          filename\n          url\n          filesize\n        }\n      }\n      actions {\n        item {\n          __typename\n          ... on Service {\n            id\n            title\n            slug\n            description\n          }\n          ... on Park {\n            id\n            title\n            slug\n            description\n          }\n          ... on Trail {\n            id\n            title\n            slug\n            description\n          }\n          ... on Facility {\n            id\n            title\n            slug\n            description\n          }\n          ... on Community {\n            id\n            title\n            slug\n            description\n          }\n          ... on AssemblyDistrict {\n            id\n            title\n            slug\n            description\n          }\n          ... on OrgUnit {\n            id\n            title\n            slug\n            description\n          }\n          ... on Url {\n            id\n            title\n            description\n            url\n          }\n        }\n        label\n      }\n    }\n  }\n": typeof types.GetPublicNoticeDocument,
    "\n  query GetServiceMeta($where: ServiceWhereUniqueInput!) {\n    service(where: $where) {\n      title\n      description\n    }\n  }\n": typeof types.GetServiceMetaDocument,
    "\n  query GetServiceNoPn($where: ServiceWhereUniqueInput!) {\n    service(where: $where) {\n      id\n      slug\n      title\n      heroImage\n      body\n      primaryAction {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n      primaryContact {\n        id\n        name\n        phone\n        email\n      }\n      contacts {\n        id\n        name\n        phone\n        email\n      }\n    }\n  }\n": typeof types.GetServiceNoPnDocument,
    "\n  query GetService(\n    $where: ServiceWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    service(where: $where) {\n      id\n      slug\n      title\n      heroImage\n      primaryAction {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n      primaryContact {\n        id\n        name\n        phone\n        email\n      }\n      contacts {\n        id\n        name\n        phone\n        email\n      }\n    }\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n": typeof types.GetServiceDocument,
    "\n  query GetTrailMeta($where: TrailWhereUniqueInput!) {\n    trail(where: $where) {\n      title\n      description\n    }\n  }\n": typeof types.GetTrailMetaDocument,
    "\n  query GetTrail(\n    $where: TrailWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    trail(where: $where) {\n      id\n      title\n      body\n      heroImage\n      description\n      length\n      atv\n      biking\n      crossCountrySkiing\n      difficulty\n      dirtBiking\n      dogWalking\n      elevationChange\n      fall\n      frisbeeGolf\n      hiking\n      horsebackRiding\n      mushing\n      open\n      running\n      snowMachining\n      snowshoeing\n      spring\n      summer\n      winter\n      park {\n        id\n        slug\n        title\n        description\n      }\n      contacts {\n        id\n        name\n        title\n        phone\n        email\n      }\n      address {\n        id\n        title\n        lineOne\n        lineTwo\n        state\n        city\n        zip\n      }\n      services {\n        id\n        title\n        slug\n        description\n      }\n    }\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n": typeof types.GetTrailDocument,
};
const documents: Documents = {
    "\n  query GetAlerts {\n    alerts {\n      id\n      title\n      urgency\n      body\n    }\n  }\n": types.GetAlertsDocument,
    "\n  query GetAssemblyDistrictMeta($where: AssemblyDistrictWhereUniqueInput!) {\n    assemblyDistrict(where: $where) {\n      title\n      description\n    }\n  }\n": types.GetAssemblyDistrictMetaDocument,
    "\n  query GetAssemblyDistrict(\n    $where: AssemblyDistrictWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]\n  ) {\n    assemblyDistrict(where: $where) {\n      id\n      heroImage\n      title\n      description\n      slug\n      body\n      contacts {\n        id\n        name\n        title\n        phone\n        email\n      }\n      photo {\n        id\n        title\n        description\n        file {\n          id\n          width\n          height\n          url\n        }\n      }\n      memberName\n      bio\n      address\n      email\n      phone\n      fax\n      termStart\n      termEnd\n    }\n\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n": types.GetAssemblyDistrictDocument,
    "\n  query GetBoardMeta($where: BoardWhereUniqueInput!) {\n    board(where: $where) {\n      title\n      description\n    }\n  }\n": types.GetBoardMetaDocument,
    "\n  query GetBoard($where: BoardWhereUniqueInput!) {\n    board(where: $where) {\n      id\n      title\n      slug\n      description\n      body\n      heroImage\n      meetingSchedule\n      isActive\n      communities {\n        id\n        title\n        slug\n        description\n      }\n      districts {\n        id\n        title\n        slug\n        description\n        memberName\n        bio\n        address\n        email\n        phone\n        photo {\n          id\n          title\n          file {\n            width\n            height\n            url\n          }\n        }\n      }\n      linkToAgendas {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n      linkToResolutions {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n      linkToPublicOpinionMessage {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n\n      contacts {\n        id\n        name\n        title\n        phone\n        email\n      }\n      actions {\n        id\n        label\n        item {\n          __typename\n          ... on Service {\n            id\n            title\n            slug\n            description\n          }\n          ... on Park {\n            id\n            title\n            slug\n            description\n          }\n          ... on Trail {\n            id\n            title\n            slug\n            description\n          }\n          ... on Facility {\n            id\n            title\n            slug\n            description\n          }\n          ... on Community {\n            id\n            title\n            slug\n            description\n          }\n          ... on AssemblyDistrict {\n            id\n            title\n            slug\n            description\n          }\n          ... on OrgUnit {\n            id\n            title\n            slug\n            description\n          }\n          ... on Url {\n            id\n            title\n            description\n            url\n          }\n        }\n      }\n      documents {\n        id\n        title\n        file {\n          url\n          filename\n          filesize\n        }\n      }\n    }\n  }\n": types.GetBoardDocument,
    "\n  query GetBoards($take: Int, $skip: Int, $where: BoardWhereInput) {\n    boards(take: $take, where: $where, skip: $skip) {\n      id\n      title\n      slug\n      description\n      isActive\n      type\n      meetingSchedule\n    }\n  }\n": types.GetBoardsDocument,
    "\n  query GetBoardsPageMeta {\n    boardPage {\n      title\n      description\n    }\n  }\n": types.GetBoardsPageMetaDocument,
    "\n  query GetBoardsPage {\n    boardPage {\n      id\n      title\n      description\n      body\n      heroImage\n      vacancyReport {\n        id\n        title\n        file {\n          url\n          filename\n          filesize\n        }\n      }\n      documents {\n        id\n        title\n        file {\n          url\n          filename\n          filesize\n        }\n      }\n      applicationForm {\n        id\n        title\n        file {\n          url\n          filename\n          filesize\n        }\n      }\n\n      contacts {\n        id\n        name\n        title\n        phone\n        email\n      }\n\n      actions {\n        id\n        label\n        item {\n          __typename\n          ... on Service {\n            id\n            title\n            slug\n            description\n          }\n          ... on Park {\n            id\n            title\n            slug\n            description\n          }\n          ... on Trail {\n            id\n            title\n            slug\n            description\n          }\n          ... on Facility {\n            id\n            title\n            slug\n            description\n          }\n          ... on Community {\n            id\n            title\n            slug\n            description\n          }\n          ... on AssemblyDistrict {\n            id\n            title\n            slug\n            description\n          }\n          ... on OrgUnit {\n            id\n            title\n            slug\n            description\n          }\n          ... on Url {\n            id\n            title\n            description\n            url\n          }\n        }\n      }\n    }\n  }\n": types.GetBoardsPageDocument,
    "\n  query GetCommunityMeta($where: CommunityWhereUniqueInput!) {\n    community(where: $where) {\n      title\n      description\n    }\n  }\n": types.GetCommunityMetaDocument,
    "\n  query GetCommunity(\n    $where: CommunityWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    community(where: $where) {\n      id\n      title\n      description\n      body\n      heroImage\n      services {\n        id\n        slug\n        title\n        description\n      }\n      contacts {\n        id\n        name\n        phone\n        email\n      }\n      districts {\n        slug\n        title\n        description\n        memberName\n        photo {\n          file {\n            url\n          }\n        }\n      }\n    }\n\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n": types.GetCommunityDocument,
    "\n  query GetDocumentCollection($where: DocumentCollectionWhereUniqueInput!) {\n    documentCollection(where: $where) {\n      id\n      title\n      documents {\n        id\n        title\n        file {\n          filename\n          filesize\n          url\n        }\n      }\n    }\n  }\n": types.GetDocumentCollectionDocument,
    "\n  query GetFacilityMeta($where: FacilityWhereUniqueInput!) {\n    facility(where: $where) {\n      title\n      description\n    }\n  }\n": types.GetFacilityMetaDocument,
    "\n  query GetFacility(\n    $where: FacilityWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    facility(where: $where) {\n      id\n      slug\n      title\n      liveUrl\n      heroImage\n      park {\n        id\n        title\n        description\n        slug\n      }\n      services {\n        id\n        title\n        description\n        slug\n      }\n      description\n      body\n      address {\n        title\n        lineOne\n        lineTwo\n        city\n        state\n        zip\n      }\n      contacts {\n        id\n        name\n        email\n        phone\n        title\n      }\n      hours {\n        day\n        open\n        close\n      }\n    }\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n": types.GetFacilityDocument,
    "\n  query GetHomePageMeta {\n    homePage {\n      title\n      description\n    }\n  }\n": types.GetHomePageMetaDocument,
    "\n  query GetHomePage($take: Int, $orderBy: [PublicNoticeOrderByInput!]!) {\n    homePage {\n      id\n      title\n      description\n      heroImage\n      toolbeltOne {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      toolbeltTwo {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      toolbeltThree {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n          selectItem\n        }\n      }\n      toolbeltFour {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      highlightOne {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      highlightTwo {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      highlightThree {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n    }\n\n    publicNotices(take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n": types.GetHomePageDocument,
    "\n  query GetOrgUnitMeta($where: OrgUnitWhereUniqueInput!) {\n    orgUnit(where: $where) {\n      id\n      title\n      description\n    }\n  }\n": types.GetOrgUnitMetaDocument,
    "\n  query GetOrgUnit(\n    $where: OrgUnitWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    orgUnit(where: $where) {\n      id\n      title\n      description\n      body\n      heroImage\n      children {\n        id\n        description\n        title\n        slug\n      }\n      contacts {\n        id\n        name\n        title\n        email\n        phone\n      }\n      parent {\n        id\n        slug\n        title\n        description\n      }\n      services {\n        id\n        slug\n        title\n        description\n      }\n    }\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n": types.GetOrgUnitDocument,
    "\n  query GetParkMeta($where: ParkWhereUniqueInput!) {\n    park(where: $where) {\n      title\n      description\n    }\n  }\n": types.GetParkMetaDocument,
    "\n  query GetPark(\n    $where: ParkWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    park(where: $where) {\n      id\n      title\n      slug\n      body\n      heroImage\n      contacts {\n        id\n        title\n        phone\n        email\n        name\n      }\n      services {\n        title\n        description\n        slug\n        id\n      }\n      address {\n        title\n        lineOne\n        lineOne\n        city\n        state\n        zip\n      }\n      hours {\n        day\n        open\n        close\n      }\n      trails {\n        title\n        description\n        slug\n        id\n      }\n      facilities {\n        title\n        id\n        description\n        slug\n      }\n    }\n\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n": types.GetParkDocument,
    "\n  query GetPublicNoticeMeta($where: PublicNoticeWhereUniqueInput!) {\n    publicNotice(where: $where) {\n      title\n      description\n    }\n  }\n": types.GetPublicNoticeMetaDocument,
    "\n  query GetPublicNotice($where: PublicNoticeWhereUniqueInput!) {\n    publicNotice(where: $where) {\n      id\n      slug\n      title\n      heroImage\n      body\n      description\n      effectiveDate\n      endDate\n      contacts {\n        id\n        name\n        title\n        email\n        phone\n      }\n      documents {\n        id\n        title\n        file {\n          filename\n          url\n          filesize\n        }\n      }\n      actions {\n        item {\n          __typename\n          ... on Service {\n            id\n            title\n            slug\n            description\n          }\n          ... on Park {\n            id\n            title\n            slug\n            description\n          }\n          ... on Trail {\n            id\n            title\n            slug\n            description\n          }\n          ... on Facility {\n            id\n            title\n            slug\n            description\n          }\n          ... on Community {\n            id\n            title\n            slug\n            description\n          }\n          ... on AssemblyDistrict {\n            id\n            title\n            slug\n            description\n          }\n          ... on OrgUnit {\n            id\n            title\n            slug\n            description\n          }\n          ... on Url {\n            id\n            title\n            description\n            url\n          }\n        }\n        label\n      }\n    }\n  }\n": types.GetPublicNoticeDocument,
    "\n  query GetServiceMeta($where: ServiceWhereUniqueInput!) {\n    service(where: $where) {\n      title\n      description\n    }\n  }\n": types.GetServiceMetaDocument,
    "\n  query GetServiceNoPn($where: ServiceWhereUniqueInput!) {\n    service(where: $where) {\n      id\n      slug\n      title\n      heroImage\n      body\n      primaryAction {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n      primaryContact {\n        id\n        name\n        phone\n        email\n      }\n      contacts {\n        id\n        name\n        phone\n        email\n      }\n    }\n  }\n": types.GetServiceNoPnDocument,
    "\n  query GetService(\n    $where: ServiceWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    service(where: $where) {\n      id\n      slug\n      title\n      heroImage\n      primaryAction {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n      primaryContact {\n        id\n        name\n        phone\n        email\n      }\n      contacts {\n        id\n        name\n        phone\n        email\n      }\n    }\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n": types.GetServiceDocument,
    "\n  query GetTrailMeta($where: TrailWhereUniqueInput!) {\n    trail(where: $where) {\n      title\n      description\n    }\n  }\n": types.GetTrailMetaDocument,
    "\n  query GetTrail(\n    $where: TrailWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    trail(where: $where) {\n      id\n      title\n      body\n      heroImage\n      description\n      length\n      atv\n      biking\n      crossCountrySkiing\n      difficulty\n      dirtBiking\n      dogWalking\n      elevationChange\n      fall\n      frisbeeGolf\n      hiking\n      horsebackRiding\n      mushing\n      open\n      running\n      snowMachining\n      snowshoeing\n      spring\n      summer\n      winter\n      park {\n        id\n        slug\n        title\n        description\n      }\n      contacts {\n        id\n        name\n        title\n        phone\n        email\n      }\n      address {\n        id\n        title\n        lineOne\n        lineTwo\n        state\n        city\n        zip\n      }\n      services {\n        id\n        title\n        slug\n        description\n      }\n    }\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n": types.GetTrailDocument,
};

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = gql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function gql(source: string): unknown;

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAlerts {\n    alerts {\n      id\n      title\n      urgency\n      body\n    }\n  }\n"): (typeof documents)["\n  query GetAlerts {\n    alerts {\n      id\n      title\n      urgency\n      body\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAssemblyDistrictMeta($where: AssemblyDistrictWhereUniqueInput!) {\n    assemblyDistrict(where: $where) {\n      title\n      description\n    }\n  }\n"): (typeof documents)["\n  query GetAssemblyDistrictMeta($where: AssemblyDistrictWhereUniqueInput!) {\n    assemblyDistrict(where: $where) {\n      title\n      description\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetAssemblyDistrict(\n    $where: AssemblyDistrictWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]\n  ) {\n    assemblyDistrict(where: $where) {\n      id\n      heroImage\n      title\n      description\n      slug\n      body\n      contacts {\n        id\n        name\n        title\n        phone\n        email\n      }\n      photo {\n        id\n        title\n        description\n        file {\n          id\n          width\n          height\n          url\n        }\n      }\n      memberName\n      bio\n      address\n      email\n      phone\n      fax\n      termStart\n      termEnd\n    }\n\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n"): (typeof documents)["\n  query GetAssemblyDistrict(\n    $where: AssemblyDistrictWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]\n  ) {\n    assemblyDistrict(where: $where) {\n      id\n      heroImage\n      title\n      description\n      slug\n      body\n      contacts {\n        id\n        name\n        title\n        phone\n        email\n      }\n      photo {\n        id\n        title\n        description\n        file {\n          id\n          width\n          height\n          url\n        }\n      }\n      memberName\n      bio\n      address\n      email\n      phone\n      fax\n      termStart\n      termEnd\n    }\n\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetBoardMeta($where: BoardWhereUniqueInput!) {\n    board(where: $where) {\n      title\n      description\n    }\n  }\n"): (typeof documents)["\n  query GetBoardMeta($where: BoardWhereUniqueInput!) {\n    board(where: $where) {\n      title\n      description\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetBoard($where: BoardWhereUniqueInput!) {\n    board(where: $where) {\n      id\n      title\n      slug\n      description\n      body\n      heroImage\n      meetingSchedule\n      isActive\n      communities {\n        id\n        title\n        slug\n        description\n      }\n      districts {\n        id\n        title\n        slug\n        description\n        memberName\n        bio\n        address\n        email\n        phone\n        photo {\n          id\n          title\n          file {\n            width\n            height\n            url\n          }\n        }\n      }\n      linkToAgendas {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n      linkToResolutions {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n      linkToPublicOpinionMessage {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n\n      contacts {\n        id\n        name\n        title\n        phone\n        email\n      }\n      actions {\n        id\n        label\n        item {\n          __typename\n          ... on Service {\n            id\n            title\n            slug\n            description\n          }\n          ... on Park {\n            id\n            title\n            slug\n            description\n          }\n          ... on Trail {\n            id\n            title\n            slug\n            description\n          }\n          ... on Facility {\n            id\n            title\n            slug\n            description\n          }\n          ... on Community {\n            id\n            title\n            slug\n            description\n          }\n          ... on AssemblyDistrict {\n            id\n            title\n            slug\n            description\n          }\n          ... on OrgUnit {\n            id\n            title\n            slug\n            description\n          }\n          ... on Url {\n            id\n            title\n            description\n            url\n          }\n        }\n      }\n      documents {\n        id\n        title\n        file {\n          url\n          filename\n          filesize\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetBoard($where: BoardWhereUniqueInput!) {\n    board(where: $where) {\n      id\n      title\n      slug\n      description\n      body\n      heroImage\n      meetingSchedule\n      isActive\n      communities {\n        id\n        title\n        slug\n        description\n      }\n      districts {\n        id\n        title\n        slug\n        description\n        memberName\n        bio\n        address\n        email\n        phone\n        photo {\n          id\n          title\n          file {\n            width\n            height\n            url\n          }\n        }\n      }\n      linkToAgendas {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n      linkToResolutions {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n      linkToPublicOpinionMessage {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n\n      contacts {\n        id\n        name\n        title\n        phone\n        email\n      }\n      actions {\n        id\n        label\n        item {\n          __typename\n          ... on Service {\n            id\n            title\n            slug\n            description\n          }\n          ... on Park {\n            id\n            title\n            slug\n            description\n          }\n          ... on Trail {\n            id\n            title\n            slug\n            description\n          }\n          ... on Facility {\n            id\n            title\n            slug\n            description\n          }\n          ... on Community {\n            id\n            title\n            slug\n            description\n          }\n          ... on AssemblyDistrict {\n            id\n            title\n            slug\n            description\n          }\n          ... on OrgUnit {\n            id\n            title\n            slug\n            description\n          }\n          ... on Url {\n            id\n            title\n            description\n            url\n          }\n        }\n      }\n      documents {\n        id\n        title\n        file {\n          url\n          filename\n          filesize\n        }\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetBoards($take: Int, $skip: Int, $where: BoardWhereInput) {\n    boards(take: $take, where: $where, skip: $skip) {\n      id\n      title\n      slug\n      description\n      isActive\n      type\n      meetingSchedule\n    }\n  }\n"): (typeof documents)["\n  query GetBoards($take: Int, $skip: Int, $where: BoardWhereInput) {\n    boards(take: $take, where: $where, skip: $skip) {\n      id\n      title\n      slug\n      description\n      isActive\n      type\n      meetingSchedule\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetBoardsPageMeta {\n    boardPage {\n      title\n      description\n    }\n  }\n"): (typeof documents)["\n  query GetBoardsPageMeta {\n    boardPage {\n      title\n      description\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetBoardsPage {\n    boardPage {\n      id\n      title\n      description\n      body\n      heroImage\n      vacancyReport {\n        id\n        title\n        file {\n          url\n          filename\n          filesize\n        }\n      }\n      documents {\n        id\n        title\n        file {\n          url\n          filename\n          filesize\n        }\n      }\n      applicationForm {\n        id\n        title\n        file {\n          url\n          filename\n          filesize\n        }\n      }\n\n      contacts {\n        id\n        name\n        title\n        phone\n        email\n      }\n\n      actions {\n        id\n        label\n        item {\n          __typename\n          ... on Service {\n            id\n            title\n            slug\n            description\n          }\n          ... on Park {\n            id\n            title\n            slug\n            description\n          }\n          ... on Trail {\n            id\n            title\n            slug\n            description\n          }\n          ... on Facility {\n            id\n            title\n            slug\n            description\n          }\n          ... on Community {\n            id\n            title\n            slug\n            description\n          }\n          ... on AssemblyDistrict {\n            id\n            title\n            slug\n            description\n          }\n          ... on OrgUnit {\n            id\n            title\n            slug\n            description\n          }\n          ... on Url {\n            id\n            title\n            description\n            url\n          }\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetBoardsPage {\n    boardPage {\n      id\n      title\n      description\n      body\n      heroImage\n      vacancyReport {\n        id\n        title\n        file {\n          url\n          filename\n          filesize\n        }\n      }\n      documents {\n        id\n        title\n        file {\n          url\n          filename\n          filesize\n        }\n      }\n      applicationForm {\n        id\n        title\n        file {\n          url\n          filename\n          filesize\n        }\n      }\n\n      contacts {\n        id\n        name\n        title\n        phone\n        email\n      }\n\n      actions {\n        id\n        label\n        item {\n          __typename\n          ... on Service {\n            id\n            title\n            slug\n            description\n          }\n          ... on Park {\n            id\n            title\n            slug\n            description\n          }\n          ... on Trail {\n            id\n            title\n            slug\n            description\n          }\n          ... on Facility {\n            id\n            title\n            slug\n            description\n          }\n          ... on Community {\n            id\n            title\n            slug\n            description\n          }\n          ... on AssemblyDistrict {\n            id\n            title\n            slug\n            description\n          }\n          ... on OrgUnit {\n            id\n            title\n            slug\n            description\n          }\n          ... on Url {\n            id\n            title\n            description\n            url\n          }\n        }\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetCommunityMeta($where: CommunityWhereUniqueInput!) {\n    community(where: $where) {\n      title\n      description\n    }\n  }\n"): (typeof documents)["\n  query GetCommunityMeta($where: CommunityWhereUniqueInput!) {\n    community(where: $where) {\n      title\n      description\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetCommunity(\n    $where: CommunityWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    community(where: $where) {\n      id\n      title\n      description\n      body\n      heroImage\n      services {\n        id\n        slug\n        title\n        description\n      }\n      contacts {\n        id\n        name\n        phone\n        email\n      }\n      districts {\n        slug\n        title\n        description\n        memberName\n        photo {\n          file {\n            url\n          }\n        }\n      }\n    }\n\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n"): (typeof documents)["\n  query GetCommunity(\n    $where: CommunityWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    community(where: $where) {\n      id\n      title\n      description\n      body\n      heroImage\n      services {\n        id\n        slug\n        title\n        description\n      }\n      contacts {\n        id\n        name\n        phone\n        email\n      }\n      districts {\n        slug\n        title\n        description\n        memberName\n        photo {\n          file {\n            url\n          }\n        }\n      }\n    }\n\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetDocumentCollection($where: DocumentCollectionWhereUniqueInput!) {\n    documentCollection(where: $where) {\n      id\n      title\n      documents {\n        id\n        title\n        file {\n          filename\n          filesize\n          url\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetDocumentCollection($where: DocumentCollectionWhereUniqueInput!) {\n    documentCollection(where: $where) {\n      id\n      title\n      documents {\n        id\n        title\n        file {\n          filename\n          filesize\n          url\n        }\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetFacilityMeta($where: FacilityWhereUniqueInput!) {\n    facility(where: $where) {\n      title\n      description\n    }\n  }\n"): (typeof documents)["\n  query GetFacilityMeta($where: FacilityWhereUniqueInput!) {\n    facility(where: $where) {\n      title\n      description\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetFacility(\n    $where: FacilityWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    facility(where: $where) {\n      id\n      slug\n      title\n      liveUrl\n      heroImage\n      park {\n        id\n        title\n        description\n        slug\n      }\n      services {\n        id\n        title\n        description\n        slug\n      }\n      description\n      body\n      address {\n        title\n        lineOne\n        lineTwo\n        city\n        state\n        zip\n      }\n      contacts {\n        id\n        name\n        email\n        phone\n        title\n      }\n      hours {\n        day\n        open\n        close\n      }\n    }\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n"): (typeof documents)["\n  query GetFacility(\n    $where: FacilityWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    facility(where: $where) {\n      id\n      slug\n      title\n      liveUrl\n      heroImage\n      park {\n        id\n        title\n        description\n        slug\n      }\n      services {\n        id\n        title\n        description\n        slug\n      }\n      description\n      body\n      address {\n        title\n        lineOne\n        lineTwo\n        city\n        state\n        zip\n      }\n      contacts {\n        id\n        name\n        email\n        phone\n        title\n      }\n      hours {\n        day\n        open\n        close\n      }\n    }\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetHomePageMeta {\n    homePage {\n      title\n      description\n    }\n  }\n"): (typeof documents)["\n  query GetHomePageMeta {\n    homePage {\n      title\n      description\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetHomePage($take: Int, $orderBy: [PublicNoticeOrderByInput!]!) {\n    homePage {\n      id\n      title\n      description\n      heroImage\n      toolbeltOne {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      toolbeltTwo {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      toolbeltThree {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n          selectItem\n        }\n      }\n      toolbeltFour {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      highlightOne {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      highlightTwo {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      highlightThree {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n    }\n\n    publicNotices(take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n"): (typeof documents)["\n  query GetHomePage($take: Int, $orderBy: [PublicNoticeOrderByInput!]!) {\n    homePage {\n      id\n      title\n      description\n      heroImage\n      toolbeltOne {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      toolbeltTwo {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      toolbeltThree {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n          selectItem\n        }\n      }\n      toolbeltFour {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      highlightOne {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      highlightTwo {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n      highlightThree {\n        id\n        image\n        title\n        linkedItem {\n          label\n          item {\n            __typename\n            ... on Service {\n              id\n              title\n              slug\n              description\n            }\n            ... on Park {\n              id\n              title\n              slug\n              description\n            }\n            ... on Trail {\n              id\n              title\n              slug\n              description\n            }\n            ... on Facility {\n              id\n              title\n              slug\n              description\n            }\n            ... on Community {\n              id\n              title\n              slug\n              description\n            }\n            ... on AssemblyDistrict {\n              id\n              title\n              slug\n              description\n            }\n            ... on OrgUnit {\n              id\n              title\n              slug\n              description\n            }\n            ... on Url {\n              id\n              title\n              description\n              url\n            }\n          }\n        }\n      }\n    }\n\n    publicNotices(take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetOrgUnitMeta($where: OrgUnitWhereUniqueInput!) {\n    orgUnit(where: $where) {\n      id\n      title\n      description\n    }\n  }\n"): (typeof documents)["\n  query GetOrgUnitMeta($where: OrgUnitWhereUniqueInput!) {\n    orgUnit(where: $where) {\n      id\n      title\n      description\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetOrgUnit(\n    $where: OrgUnitWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    orgUnit(where: $where) {\n      id\n      title\n      description\n      body\n      heroImage\n      children {\n        id\n        description\n        title\n        slug\n      }\n      contacts {\n        id\n        name\n        title\n        email\n        phone\n      }\n      parent {\n        id\n        slug\n        title\n        description\n      }\n      services {\n        id\n        slug\n        title\n        description\n      }\n    }\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n"): (typeof documents)["\n  query GetOrgUnit(\n    $where: OrgUnitWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    orgUnit(where: $where) {\n      id\n      title\n      description\n      body\n      heroImage\n      children {\n        id\n        description\n        title\n        slug\n      }\n      contacts {\n        id\n        name\n        title\n        email\n        phone\n      }\n      parent {\n        id\n        slug\n        title\n        description\n      }\n      services {\n        id\n        slug\n        title\n        description\n      }\n    }\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetParkMeta($where: ParkWhereUniqueInput!) {\n    park(where: $where) {\n      title\n      description\n    }\n  }\n"): (typeof documents)["\n  query GetParkMeta($where: ParkWhereUniqueInput!) {\n    park(where: $where) {\n      title\n      description\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetPark(\n    $where: ParkWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    park(where: $where) {\n      id\n      title\n      slug\n      body\n      heroImage\n      contacts {\n        id\n        title\n        phone\n        email\n        name\n      }\n      services {\n        title\n        description\n        slug\n        id\n      }\n      address {\n        title\n        lineOne\n        lineOne\n        city\n        state\n        zip\n      }\n      hours {\n        day\n        open\n        close\n      }\n      trails {\n        title\n        description\n        slug\n        id\n      }\n      facilities {\n        title\n        id\n        description\n        slug\n      }\n    }\n\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n"): (typeof documents)["\n  query GetPark(\n    $where: ParkWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    park(where: $where) {\n      id\n      title\n      slug\n      body\n      heroImage\n      contacts {\n        id\n        title\n        phone\n        email\n        name\n      }\n      services {\n        title\n        description\n        slug\n        id\n      }\n      address {\n        title\n        lineOne\n        lineOne\n        city\n        state\n        zip\n      }\n      hours {\n        day\n        open\n        close\n      }\n      trails {\n        title\n        description\n        slug\n        id\n      }\n      facilities {\n        title\n        id\n        description\n        slug\n      }\n    }\n\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetPublicNoticeMeta($where: PublicNoticeWhereUniqueInput!) {\n    publicNotice(where: $where) {\n      title\n      description\n    }\n  }\n"): (typeof documents)["\n  query GetPublicNoticeMeta($where: PublicNoticeWhereUniqueInput!) {\n    publicNotice(where: $where) {\n      title\n      description\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetPublicNotice($where: PublicNoticeWhereUniqueInput!) {\n    publicNotice(where: $where) {\n      id\n      slug\n      title\n      heroImage\n      body\n      description\n      effectiveDate\n      endDate\n      contacts {\n        id\n        name\n        title\n        email\n        phone\n      }\n      documents {\n        id\n        title\n        file {\n          filename\n          url\n          filesize\n        }\n      }\n      actions {\n        item {\n          __typename\n          ... on Service {\n            id\n            title\n            slug\n            description\n          }\n          ... on Park {\n            id\n            title\n            slug\n            description\n          }\n          ... on Trail {\n            id\n            title\n            slug\n            description\n          }\n          ... on Facility {\n            id\n            title\n            slug\n            description\n          }\n          ... on Community {\n            id\n            title\n            slug\n            description\n          }\n          ... on AssemblyDistrict {\n            id\n            title\n            slug\n            description\n          }\n          ... on OrgUnit {\n            id\n            title\n            slug\n            description\n          }\n          ... on Url {\n            id\n            title\n            description\n            url\n          }\n        }\n        label\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetPublicNotice($where: PublicNoticeWhereUniqueInput!) {\n    publicNotice(where: $where) {\n      id\n      slug\n      title\n      heroImage\n      body\n      description\n      effectiveDate\n      endDate\n      contacts {\n        id\n        name\n        title\n        email\n        phone\n      }\n      documents {\n        id\n        title\n        file {\n          filename\n          url\n          filesize\n        }\n      }\n      actions {\n        item {\n          __typename\n          ... on Service {\n            id\n            title\n            slug\n            description\n          }\n          ... on Park {\n            id\n            title\n            slug\n            description\n          }\n          ... on Trail {\n            id\n            title\n            slug\n            description\n          }\n          ... on Facility {\n            id\n            title\n            slug\n            description\n          }\n          ... on Community {\n            id\n            title\n            slug\n            description\n          }\n          ... on AssemblyDistrict {\n            id\n            title\n            slug\n            description\n          }\n          ... on OrgUnit {\n            id\n            title\n            slug\n            description\n          }\n          ... on Url {\n            id\n            title\n            description\n            url\n          }\n        }\n        label\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetServiceMeta($where: ServiceWhereUniqueInput!) {\n    service(where: $where) {\n      title\n      description\n    }\n  }\n"): (typeof documents)["\n  query GetServiceMeta($where: ServiceWhereUniqueInput!) {\n    service(where: $where) {\n      title\n      description\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetServiceNoPn($where: ServiceWhereUniqueInput!) {\n    service(where: $where) {\n      id\n      slug\n      title\n      heroImage\n      body\n      primaryAction {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n      primaryContact {\n        id\n        name\n        phone\n        email\n      }\n      contacts {\n        id\n        name\n        phone\n        email\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetServiceNoPn($where: ServiceWhereUniqueInput!) {\n    service(where: $where) {\n      id\n      slug\n      title\n      heroImage\n      body\n      primaryAction {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n      primaryContact {\n        id\n        name\n        phone\n        email\n      }\n      contacts {\n        id\n        name\n        phone\n        email\n      }\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetService(\n    $where: ServiceWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    service(where: $where) {\n      id\n      slug\n      title\n      heroImage\n      primaryAction {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n      primaryContact {\n        id\n        name\n        phone\n        email\n      }\n      contacts {\n        id\n        name\n        phone\n        email\n      }\n    }\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n"): (typeof documents)["\n  query GetService(\n    $where: ServiceWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    service(where: $where) {\n      id\n      slug\n      title\n      heroImage\n      primaryAction {\n        id\n        label\n        url {\n          id\n          title\n          url\n        }\n      }\n      primaryContact {\n        id\n        name\n        phone\n        email\n      }\n      contacts {\n        id\n        name\n        phone\n        email\n      }\n    }\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetTrailMeta($where: TrailWhereUniqueInput!) {\n    trail(where: $where) {\n      title\n      description\n    }\n  }\n"): (typeof documents)["\n  query GetTrailMeta($where: TrailWhereUniqueInput!) {\n    trail(where: $where) {\n      title\n      description\n    }\n  }\n"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query GetTrail(\n    $where: TrailWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    trail(where: $where) {\n      id\n      title\n      body\n      heroImage\n      description\n      length\n      atv\n      biking\n      crossCountrySkiing\n      difficulty\n      dirtBiking\n      dogWalking\n      elevationChange\n      fall\n      frisbeeGolf\n      hiking\n      horsebackRiding\n      mushing\n      open\n      running\n      snowMachining\n      snowshoeing\n      spring\n      summer\n      winter\n      park {\n        id\n        slug\n        title\n        description\n      }\n      contacts {\n        id\n        name\n        title\n        phone\n        email\n      }\n      address {\n        id\n        title\n        lineOne\n        lineTwo\n        state\n        city\n        zip\n      }\n      services {\n        id\n        title\n        slug\n        description\n      }\n    }\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n"): (typeof documents)["\n  query GetTrail(\n    $where: TrailWhereUniqueInput!\n    $publicNoticesWhere2: PublicNoticeWhereInput!\n    $take: Int\n    $orderBy: [PublicNoticeOrderByInput!]!\n  ) {\n    trail(where: $where) {\n      id\n      title\n      body\n      heroImage\n      description\n      length\n      atv\n      biking\n      crossCountrySkiing\n      difficulty\n      dirtBiking\n      dogWalking\n      elevationChange\n      fall\n      frisbeeGolf\n      hiking\n      horsebackRiding\n      mushing\n      open\n      running\n      snowMachining\n      snowshoeing\n      spring\n      summer\n      winter\n      park {\n        id\n        slug\n        title\n        description\n      }\n      contacts {\n        id\n        name\n        title\n        phone\n        email\n      }\n      address {\n        id\n        title\n        lineOne\n        lineTwo\n        state\n        city\n        zip\n      }\n      services {\n        id\n        title\n        slug\n        description\n      }\n    }\n    publicNotices(where: $publicNoticesWhere2, take: $take, orderBy: $orderBy) {\n      id\n      slug\n      title\n      description\n      heroImage\n      urgency\n    }\n  }\n"];

export function gql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;